# Logstash 설정 파일 - 파일 검색용

input {
  # 파일 입력 (여러 디렉토리 모니터링)
  file {
    path => "/documents/대상물_1/**/*"
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_대상물_1"
    codec => "plain"
    tags => ["대상물_1"]
  }
  
  file {
    path => "/documents/대상물_2/**/*"
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_대상물_2"
    codec => "plain"
    tags => ["대상물_2"]
  }
  
  file {
    path => "/documents/검색파일/**/*"
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_검색파일"
    codec => "plain"
    tags => ["검색파일"]
  }
}

filter {
  # 폴더 태그를 기반으로 소스 폴더 설정
  if "대상물_1" in [tags] {
    mutate {
      add_field => { "source_folder" => "대상물_1" }
    }
  } else if "대상물_2" in [tags] {
    mutate {
      add_field => { "source_folder" => "대상물_2" }
    }
  } else if "검색파일" in [tags] {
    mutate {
      add_field => { "source_folder" => "검색파일" }
    }
  }
  
  # 파일 경로에서 메타데이터 추출
  if [path] {
    grok {
      match => { "path" => "%{GREEDYDATA:file_path}" }
    }
    
    # 파일 확장자 추출
    if [path] =~ /\.(pdf|doc|docx|txt|rtf)$/ {
      mutate {
        add_field => { "file_type" => "document" }
      }
    } else if [path] =~ /\.(jpg|jpeg|png|gif|bmp)$/ {
      mutate {
        add_field => { "file_type" => "image" }
      }
    } else if [path] =~ /\.(mp4|avi|mov|wmv)$/ {
      mutate {
        add_field => { "file_type" => "video" }
      }
    } else {
      mutate {
        add_field => { "file_type" => "other" }
      }
    }
  }
  
  # 파일명 추출
  if [path] {
    grok {
      match => { "path" => ".*/(?<file_name>[^/]+)$" }
    }
  }
  
  # 전체 파일 경로에서 원본 경로 복원
  if [path] and [source_folder] {
    mutate {
      add_field => { "original_path" => "/volume1/공유폴더_2024/☞%{source_folder}/%{file_name}" }
    }
  }
}

output {
  # Elasticsearch에 데이터 전송
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "file_search"
    document_type => "file"
  }
  
  # 디버깅용 (옵션)
  stdout {
    codec => rubydebug
  }
}
