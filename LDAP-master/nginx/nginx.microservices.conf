events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 성능 최적화
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # 업스트림 설정
    upstream auth_service {
        server auth-service:3000;
    }

    upstream sso_provider {
        server sso-provider:3000;
    }

    upstream user_service {
        server user-service:3000;
    }

    upstream product_service {
        server product-service:3000;
    }

    upstream order_service {
        server order-service:3000;
    }

    # ================================
    # 서버 설정
    # ================================
    server {
        listen 80;
        server_name localhost;

        # HTTP to HTTPS 리다이렉트
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name localhost;

        # SSL 설정
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # ================================
        # 헬스체크
        # ================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ================================
        # API 라우팅 - 인증 서비스
        # ================================
        location /auth/ {
            limit_req zone=auth burst=10 nodelay;

            proxy_pass http://auth_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # ================================
        # OIDC 엔드포인트
        # ================================
        location /oidc/ {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://sso_provider;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # ================================
        # 사용자 관리 서비스
        # ================================
        location /api/users/ {
            limit_req zone=api burst=20 nodelay;

            # 인증 필요 엔드포인트 확인
            location /api/users/admin/ {
                auth_request /auth/verify;
                auth_request_set $user $upstream_http_x_user;
                auth_request_set $roles $upstream_http_x_roles;

                proxy_pass http://user_service;
                proxy_set_header X-User $user;
                proxy_set_header X-Roles $roles;
            }

            proxy_pass http://user_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # ================================
        # 제품 관리 서비스
        # ================================
        location /api/products/ {
            limit_req zone=api burst=20 nodelay;

            # 인증 필요 엔드포인트 확인
            location /api/products/admin/ {
                auth_request /auth/verify;
                auth_request_set $user $upstream_http_x_user;
                auth_request_set $roles $upstream_http_x_roles;

                proxy_pass http://product_service;
                proxy_set_header X-User $user;
                proxy_set_header X-Roles $roles;
            }

            proxy_pass http://product_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # ================================
        # 주문 관리 서비스
        # ================================
        location /api/orders/ {
            limit_req zone=api burst=20 nodelay;

            # 인증 필요 엔드포인트 확인
            location /api/orders/admin/ {
                auth_request /auth/verify;
                auth_request_set $user $upstream_http_x_user;
                auth_request_set $roles $upstream_http_x_roles;

                proxy_pass http://order_service;
                proxy_set_header X-User $user;
                proxy_set_header X-Roles $roles;
            }

            proxy_pass http://order_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # ================================
        # 정적 파일 서빙
        # ================================
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri @proxy_to_services;
        }

        # ================================
        # 서비스 간 통신 확인
        # ================================
        location @proxy_to_services {
            # 요청 경로에 따라 적절한 서비스로 라우팅
            proxy_pass http://auth_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # ================================
        # 기본 경로 (인증된 사용자용 대시보드)
        # ================================
        location / {
            limit_req zone=api burst=20 nodelay;

            # 인증 확인
            auth_request /auth/verify;
            auth_request_set $user $upstream_http_x_user;
            auth_request_set $roles $upstream_http_x_roles;

            # 인증된 경우 - 사용자 정보와 함께 서비스 정보 제공
            proxy_pass http://auth_service;
            proxy_set_header X-User $user;
            proxy_set_header X-Roles $roles;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
