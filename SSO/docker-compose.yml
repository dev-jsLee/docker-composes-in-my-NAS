version: '3.8'
 
services:
  # 홈페이지 서비스 (SSO + 대문 통합)
  homepage-service:
    build: 
      context: ./homepage-service
      dockerfile: Dockerfile
    ports:
      - "52220:3000"  # 메인 포트
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis-password-change-this
      - SESSION_SECRET=your-super-secret-session-key-change-this-in-production
      - DATABASE_URL=postgresql://sso_user:sso_password@localhost:5432/sso_db
      - CORS_ORIGIN=http://localhost
      - BCRYPT_ROUNDS=12
      - COOKIE_DOMAIN=
      - COOKIE_SECURE=false
      - COOKIE_HTTP_ONLY=true
      - COOKIE_MAX_AGE=86400000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - SERVICE_DISCOVERY_ENABLED=true
      - NETWORK_SCAN_ENABLED=true
      - DISCOVERY_INTERVAL=60000
      - HEALTH_CHECK_INTERVAL=30000
      - HEALTH_CHECK_TIMEOUT=5000
      - SCAN_PORTS=3000,3001,3002,3003,3004,3005,8000,8080,9000
    depends_on:
      - redis
    volumes:
      - ./homepage-service:/app
      - /app/node_modules
    networks:
      - sso-network


  # 공유 Redis 세션 저장소
  redis:
    image: redis:7-alpine
    ports:
      - "52379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - sso-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway (Nginx)
  nginx:
    image: nginx:alpine
    ports:
      - "52280:80"
      - "52243:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - homepage-service
    networks:
      - sso-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 네트워크 정의
networks:
  sso-network:
    driver: bridge

# 볼륨 정의
volumes:
  redis-data:
    driver: local
